package com.company;

import java.util.*;

public class Main {

    static ArrayList<Integer> playerPositions=new ArrayList<>();
    static ArrayList<Integer> cpuPositions=new ArrayList<>();

    public static void main(String[] args) {
	        char[][] gameBoard={{' ','|',' ','|',' '},
                                {'-','+','-','+','-'},
                                {' ','|',' ','|',' '},
                                {'-','+','-','+','-'},
                                {' ','|',' ','|',' '}};



        printGameboard(gameBoard);
        
       

       while(true) {
           Scanner scan= new Scanner(System.in);
           System.out.println("Enter your user name palyer or cpu: ");
           String user=scan.nextLine();
           System.out.println("Enter your placement (1-9)");
           int pos = scan.nextInt();

           placePiece(gameBoard,pos,user);
           
           printGameboard(gameBoard);
          String result= checkWinner();
           System.out.println(result);
       }


    }




    public static void printGameboard(char[][] gameBoard){
        for(char[] row: gameBoard){
            for(char c: row){
                System.out.print(c);
            }
            System.out.println();
        }
    }

    public static void placePiece(char[][] gameBoard,int pos, String user){
        char  symbol=' ';
        if(!playerPositions.contains(pos)&&!cpuPositions.contains(pos))
        {

        if(user.equals("player")){
            symbol='X';
            playerPositions.add(pos);
        } else if(user.equals("cpu")){
            symbol='0';
            cpuPositions.add(pos);
        }


        switch(pos){
            case 1:
                gameBoard[0][0]=symbol;
                break;
            case 2:
                gameBoard[0][2]=symbol;
                break;
            case 3:
                gameBoard[0][4]=symbol;
                break;
            case 4:
                gameBoard[2][0]=symbol;
                break;
            case 5:
                gameBoard[2][2]=symbol;
                break;
            case 6:
                gameBoard[2][4]=symbol;
                break;
            case 7:
                gameBoard[4][0]=symbol;
                break;
            case 8:
                gameBoard[4][2]=symbol;
                break;
            case 9:
                gameBoard[4][4]=symbol;
                break;
            default:
                System.out.println("error wrong number");
                break;
        }} else {
            System.out.println("ta pozycja jest juz zajeta");
        }

    }

    public static String checkWinner(){
        List topRow= Arrays.asList(1,2,3);
        List midRow= Arrays.asList(4,5,6);
        List  botRow=Arrays.asList(7,8,9);
        List leftCol= Arrays.asList(1,4,7);
        List midCol= Arrays.asList(2,5,8);
        List  rightCol=Arrays.asList(3,6,9);
        List cross1= Arrays.asList(1,5,9);
        List  cross2=Arrays.asList(7,5,3);

        List<List> winning= new ArrayList<List>();
        winning.add(topRow);
        winning.add(midRow);
        winning.add(botRow);
        winning.add(leftCol);
        winning.add(midCol);
        winning.add(rightCol);
        winning.add(cross1);
        winning.add(cross2);

        for(List l: winning){
            if(playerPositions.containsAll(l)){
                return "congratulation you won";
            } else if(cpuPositions.containsAll(l)){
                return "cpu wins";
            } else if(playerPositions.size()+cpuPositions.size()==9){
                
                return "nobody wins";
            }
        }

        return " brak zwyciezcy poki co";
    }
}

